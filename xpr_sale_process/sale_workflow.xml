<?xml version="1.0" encoding="utf-8"?>
<openerp>
    <data noupdate="1">
        <!-- sale.wkf_sale related-->
        <!-- TODO: Create new workflow and hide sale.wkf_sale -->
        <!-- Delete standard unused transitions -->
        <!-- TODO: Hide the records instead by using 'group_hidden' group -->

        <!--
        <delete id="sale.trans_draft_sent" model="workflow.transition" />
        <delete id="sale.trans_draft_router" model="workflow.transition" />
        <delete id="sale.trans_sent_router" model="workflow.transition" />
        <delete id="sale.trans_sent_cancel" model="workflow.transition" />
        <delete id="sale.trans_router_wait_invoice" model="workflow.transition" />
        <delete id="sale.trans_wait_invoice_all_lines_invoiced" model="workflow.transition" />
        <delete id="sale.trans_wait_invoice_cancel2" model="workflow.transition" />
        <delete id="sale.trans_wait_invoice_invoice_manual" model="workflow.transition" />
        <delete id="sale.trans_invoice_invoice_end" model="workflow.transition" />
        <delete id="sale.trans_invoice_invoice_except" model="workflow.transition" />
        <delete id="sale.trans_invoice_except_invoice" model="workflow.transition" />
        <delete id="sale.trans_invoice_except_invoice_end" model="workflow.transition" />
        <delete id="sale.trans_invoice_except_invoice_cancel" model="workflow.transition" />
        <delete id="sale.trans_invoice_end_done" model="workflow.transition" />
        -->

         <!-- TODO: Hide the records instead by using 'group_hidden' group -->

        <!--
        <delete id="sale.act_sent" model="workflow.activity" />
        <delete id="sale.act_router" model="workflow.activity" />
        <delete id="sale.act_wait_invoice" model="workflow.activity" />
        <delete id="sale.act_done" model="workflow.activity" />
        <delete id="sale.act_cancel2" model="workflow.activity" />
        <delete id="sale.act_invoice" model="workflow.activity" />
        <delete id="sale.act_invoice_except" model="workflow.activity" />
        <delete id="sale.act_invoice_end" model="workflow.activity" />
        <delete id="sale.act_invoice_cancel" model="workflow.activity" />
        -->
    

    </data>

    <data>
        <!-- Workflow triggered messages -->

        <record model="email.template" id="quotation_availability_notify_mail">
            <field name="name">Advertisment quotation approval request</field>
            <field name="model_id" ref="portal_sale.model_sale_order" />
            <field name="auto_delete">True</field>
            <field name="lang">${object.partner_id.lang}</field>
            <field name="email_from">${(object.user_id.email or '')|safe}</field>
            <field name="subject">Advertisment quotation to approve: ${object.partner_id != False and object.partner_id.name or object.contact_name}</field>
            <field name="body_html"><![CDATA[You must check the advertisment availability for quotation <a href="${object.form_url|safe}">${object.name}</a>.<br/>Salesperson notes:<br/>${ctx.get('message','')}]]></field>
        </record>

        <record model="email.template" id="quotation_availability_refused">
            <field name="name">Advertisment quotation approval refused</field>
            <field name="model_id" ref="portal_sale.model_sale_order" />
            <field name="auto_delete">True</field>
            <field name="lang">${object.partner_id.lang}</field>
            <field name="email_to">${(object.user_id.email or '')|safe}</field>
            <field name="subject">Advertising Not available: ${object.partner_id != False and object.partner_id.name or object.contact_name}</field>
            <field name="body_html"><![CDATA[The advertising quotation was declined: <a href="${object.form_url|safe}">${object.name}</a><br/>Advertising team notes:<br/>${ctx.get('message','')}]]></field>
        </record>

        <record model="email.template" id="quotation_manager_approval_mail">
            <field name="name">Quotation discount approval request</field>
            <field name="model_id" ref="portal_sale.model_sale_order" />
            <field name="auto_delete">True</field>
            <field name="lang">${object.partner_id.lang}</field>
            <field name="email_from">${(object.user_id.email or '')|safe}</field>
            <field name="subject">Quotation discount to approve: ${object.name} for ${object.partner_id! = False and object.partner_id.name or object.contact_name}</field>
            <field name="body_html"><![CDATA[This quotation has to be approved for discounts <a href="${object.form_url|safe}">${object.name}</a>.
            ]]></field>
        </record>

        <record model="email.template" id="quotation_availability_reopen_mail">
            <field name="name">Quotation in availability check reopened</field>
            <field name="model_id" ref="portal_sale.model_sale_order" />
            <field name="auto_delete">True</field>
            <field name="lang">${object.partner_id.lang}</field>
            <field name="email_from">${(object.user_id.email or '')|safe}</field>
            <field name="subject">Reopened quotation in availability check: ${object.name} for ${object.partner_id != False and object.partner_id.name or object.contact_name}</field>
            <field name="body_html"><![CDATA[This quotation in availability check has been reopened <a href="${object.form_url|safe}">${object.name}</a>]]></field>
        </record>

        <record id="view_availability_check_message" model="ir.ui.view">
            <field name="name">availability message capture</field>
            <field name="model">xpr_sale_process.availability_message</field>
            <field name="arch" type="xml">
                <form string="Write Approval message">
                    <group>
                        <field name="order_id" invisible="1" />
                        <field name="message" widget="textbox" />
                        <field name="for_approval" invisible="1" />
                    </group>

                    <footer>
                        <button
                            string="To Approval"
                            type="object"
                            name="notify_availability_check"
                            class="oe_highlight"
                            attrs="{'invisible': [('for_approval','==', False)]}"
                        />

                        <button
                            string="Back to Rep"
                            type="object"
                            name="notify_availability_refused"
                            class="oe_highlight"
                            attrs="{'invisible': [('for_approval','==', True)]}"
                        />

                        <button
                            string="Cancel"
                            class="oe_link"
                            special="cancel" />
                    </footer>
                </form>
            </field>
        </record>
    </data>

    <data>     

        <!-- Custom activities -->
        <record model="workflow.activity" id="act_check_product_availability">
            <field name="name">Availability Check</field>
            <field name="wkf_id" ref="sale.wkf_sale"/>
            <field name="kind">function</field>
            <field name="action">action_require_availability_check()</field>
        </record>

        <record model="workflow.activity" id="act_check_manager_approval_needed">
            <field name="name">Check Manager Approval Needed</field>
            <field name="wkf_id" ref="sale.wkf_sale"/>
            <field name="kind">dummy</field>
        </record>

        <record model="workflow.activity" id="act_manager_approval_needed">
            <field name="name">Manager Approval Needed</field>
            <field name="wkf_id" ref="sale.wkf_sale"/>
            <field name="kind">function</field>
            <field name="action">notify_manager_approval()</field>
        </record>

        <record model="workflow.activity" id="act_manager_approved">
            <field name="name">Manager Approved</field>
            <field name="wkf_id" ref="sale.wkf_sale"/>
            <field name="kind">function</field>
            <field name="action">write({'state':'manager_approved'})</field>
        </record>

        <record model="workflow.activity" id="act_manager_not_approved">
            <field name="name">Manager Declined</field>
            <field name="wkf_id" ref="sale.wkf_sale"/>
            <field name="kind">function</field>
            <field name="action">write({'state':'manager_not_approved'})</field>
        </record>

        <!--
        <record model="workflow.activity" id="act_post_quote_creation_actions">
            <field name="name">Post Quote Creation Actions</field>
            <field name="wkf_id" ref="sale.wkf_sale"/>
            <field name="kind">dummy</field>
        </record>
        -->

        <record model="workflow.activity" id="act_contract_not_presented">
            <field name="name">Customer Approval Needed</field>
            <field name="wkf_id" ref="sale.wkf_sale"/>
            <field name="kind">function</field>
            <field name="action">write({'state':'contract_not_presented'})</field>
        </record>

        <record model="workflow.activity" id="act_contract_approved">
            <field name="name">Contract Approved</field>
            <field name="wkf_id" ref="sale.wkf_sale"/>
            <field name="kind">function</field>
            <field name="action">write({'state':'contract_approved'})</field>
            <field name="flow_stop">True</field>
        </record>

        <record model="workflow.activity" id="act_contract_not_approved">
            <field name="name">Customer Declined</field>
            <field name="wkf_id" ref="sale.wkf_sale"/>
            <field name="kind">function</field>
            <field name="action">write({'state':'contract_not_approved'})</field>
        </record>

        <record model="workflow.activity" id="act_contract_reopened">
            <field name="name">Reopened for edit</field>
            <field name="wkf_id" ref="sale.wkf_sale"/>
            <field name="kind">function</field>
            <field name="action">write({'state':'draft'})</field>
        </record>

        <record model="workflow.activity" id="act_contract_reopened">
            <field name="name">Reopened for edit</field>
            <field name="wkf_id" ref="sale.wkf_sale"/>
            <field name="kind">function</field>
            <field name="action">write({'state':'draft'})</field>
        </record>

        <record model="workflow.activity" id="act_approval_interrupted">
            <field name="name">Approval Interrupted</field>
            <field name="wkf_id" ref="sale.wkf_sale"/>
            <field name="kind">dummy</field>
        </record>

        <record model="workflow.activity" id="act_availability_interrupted">
            <field name="name">Availability Check Interrupted</field>
            <field name="wkf_id" ref="sale.wkf_sale"/>
            <field name="kind">function</field>
            <field name="action">notify_manager_approval_interrupt()</field>
        </record>

        <!-- Custom transitions -->
        <record id="trans_draft_act_check_product_availability" model="workflow.transition">
            <field name="act_from" ref="sale.act_draft"/>
            <field name="act_to" ref="act_check_manager_approval_needed"/>
            <field name="signal">sig_check_approval_needed</field>
            <field name="condition">not check_product_availability_needed()</field>
        </record>

        <record id="trans_act_draft_act_check_product_availability" model="workflow.transition">
            <field name="act_from" ref="sale.act_draft"/>
            <field name="act_to" ref="act_check_product_availability"/>
            <field name="signal">sig_check_approval_needed</field>
            <field name="condition">check_product_availability_needed()</field>
        </record>

        <record id="trans_act_check_product_availability_self" model="workflow.transition">
            <field name="act_from" ref="act_check_product_availability"/>
            <field name="act_to" ref="act_check_product_availability"/>
            <field name="signal">sig_check_approval_needed</field>
        </record>

        <record id="trans_act_check_p_a_act_check_m_a_needed" model="workflow.transition">
            <field name="act_from" ref="act_check_product_availability"/>
            <field name="act_to" ref="act_check_manager_approval_needed"/>
            <field name="signal">sig_availability_checked</field>
        </record>

        <record id="trans_act_check_p_self" model="workflow.transition">
            <field name="act_from" ref="act_check_product_availability"/>
            <field name="act_to" ref="act_check_product_availability"/>
            <field name="signal">sig_availability_not_checked_notify</field>
        </record>

        <record id="trans_act_check_p_act_draft" model="workflow.transition">
            <field name="act_from" ref="act_check_product_availability"/>
            <field name="act_to" ref="act_manager_not_approved"/>
            <field name="signal">sig_availability_not_checked</field>
        </record>

        <record id="trans_check_manager_approval_needed_need_approval" model="workflow.transition">
            <field name="act_from" ref="act_check_manager_approval_needed"/>
            <field name="act_to" ref="act_manager_approval_needed"/>
            <field name="condition">check_manager_approval_needed()</field>
        </record>

        <record id="trans_check_manager_approval_needed_approved" model="workflow.transition">
            <field name="act_from" ref="act_check_manager_approval_needed"/>
            <field name="act_to" ref="act_manager_approved"/>
            <field name="condition">not check_manager_approval_needed()</field>
        </record>

        <record id="trans_act_manager_approval_needed_act_manager_approved" model="workflow.transition">
            <field name="act_from" ref="act_manager_approval_needed"/>
            <field name="act_to" ref="act_manager_approved"/>
            <field name="signal">sig_manager_approved</field>
            <field name="condition">has_rights_to_approve()</field>
        </record>

        <record id="trans_act_manager_approval_needed_act_manager_not_approved" model="workflow.transition">
            <field name="act_from" ref="act_manager_approval_needed"/>
            <field name="act_to" ref="act_manager_not_approved"/>
            <field name="signal">sig_manager_not_approved</field>
            <field name="condition">has_rights_to_approve()</field>
        </record>

        <record id="trans_act_manager_not_approved_draft" model="workflow.transition">
            <field name="act_from" ref="act_manager_not_approved"/>
            <field name="act_to" ref="sale.act_draft"/>
        </record>

        <record id="trans_act_contract_not_presented_act_contract_reopened" model="workflow.transition">
            <field name="act_from" ref="act_contract_not_presented"/>
            <field name="act_to" ref="act_contract_reopened"/>
            <field name="signal">sig_contract_reopened</field>
        </record>

        <record id="trans_act_manager_approval_needed_act_contract_reopened" model="workflow.transition">
            <field name="act_from" ref="act_manager_approval_needed"/>
            <field name="act_to" ref="act_contract_reopened"/>
            <field name="signal">sig_contract_reopened</field>
        </record>

        <record id="trans_act_manager_approval_needed_act_interrupted" model="workflow.transition">
            <field name="act_from" ref="act_manager_approval_needed"/>
            <field name="act_to" ref="act_approval_interrupted"/>
            <field name="signal">sig_contract_reopened</field>
        </record>

        <record id="trans_act_approval_interrupted_act_contract_reopened" model="workflow.transition">
            <field name="act_from" ref="act_approval_interrupted"/>
            <field name="act_to" ref="act_contract_reopened"/>
        </record>

        <record id="trans_act_check_product_availability_act_interrupted" model="workflow.transition">
            <field name="act_from" ref="act_check_product_availability"/>
            <field name="act_to" ref="act_availability_interrupted"/>
            <field name="groups_id" eval="[(6,0,[ref('base.group_sale_salesman')])]"/>
            <field name="signal">sig_contract_reopened</field>
        </record>

        <record id="trans_act_availability_interrupted_act_contract_reopened" model="workflow.transition">
            <field name="act_from" ref="act_availability_interrupted"/>
            <field name="act_to" ref="act_contract_reopened"/>
        </record>

        <record id="trans_act_contract_reopened_draft" model="workflow.transition">
            <field name="act_from" ref="act_contract_reopened"/>
            <field name="act_to" ref="sale.act_draft"/>
        </record>

        <record id="trans_act_manager_approved_act_contract_not_presented" model="workflow.transition">
            <field name="act_from" ref="act_manager_approved"/>
            <field name="act_to" ref="act_contract_not_presented"/>
        </record>

        <record id="trans_act_contract_not_presented_act_contract_approved" model="workflow.transition">
            <field name="act_from" ref="act_contract_not_presented"/>
            <field name="act_to" ref="act_contract_approved"/>
            <field name="signal">sig_customer_approved</field>
        </record>

        <record id="trans_act_contract_not_presented_act_contract_not_approved" model="workflow.transition">
            <field name="act_from" ref="act_contract_not_presented"/>
            <field name="act_to" ref="act_contract_not_approved"/>
            <field name="signal">sig_customer_not_approved</field>
        </record>

        <record id="trans_act_contract_not_approved_act_draft" model="workflow.transition">
            <field name="act_from" ref="act_contract_not_approved"/>
            <field name="act_to" ref="sale.act_draft"/>
        </record>

        <record id="trans_act_draft_sale_act_cancel" model="workflow.transition">
            <field name="act_from" ref="sale.act_draft"/>
            <field name="act_to" ref="sale.act_cancel"/>
            <field name="signal">sig_cancel</field>
        </record>

    </data>
</openerp>
